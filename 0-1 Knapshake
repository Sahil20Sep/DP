#include <bits/stdc++.h> 

int func(int i, int have, vector<int> &weight, vector<int> &value, vector<vector<int>> &dp){
	if(i < 0){
		return 0;
	}
	if(dp[i][have] != -1){
		return dp[i][have];
	}
	int ans = INT_MIN;
	ans = max(ans, func(i - 1, have, weight, value, dp));
	if(have - weight[i] >= 0){
		ans = max(ans, func(i - 1, have - weight[i], weight, value, dp) + value[i]);
	}
	return dp[i][have] = ans;
}

int knapsack(vector<int> weight, vector<int> value, int n, int maxWeight) 
{
	vector<vector<int>> dp(n, vector<int> (maxWeight + 1, -1));
	return func(n - 1, maxWeight, weight, value, dp);
}
