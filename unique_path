#include <bits/stdc++.h> 

int func(int i, int j, vector<vector<int>> &dp){
	if(i == 0 && j == 0){
		return 1;
	}
	if(i < 0){
		return 0;
	}
	if(j < 0){
		return 0;
	}
	if(dp[i][j] != -1){
		return dp[i][j];
	}
	int ans = 0;
	ans += func(i - 1, j, dp);
	ans += func(i, j - 1, dp);
	return dp[i][j] = ans;
}

int uniquePaths(int m, int n) {
	vector<vector<int>> dp(m, vector<int> (n, -1));
	return func(m - 1, n - 1, dp);
}

-----------------------------------------------------------------------------


const long long mod = 1e9 + 7;

long long func(int i, int j, vector<vector<int>> &dp, vector<vector<int>> &mat){
	if(i == 0 && j == 0 && mat[i][j] != -1){
		return 1;
	}
	if(i < 0 || j < 0){
		return 0;
	}
    if(mat[i][j] == -1){
	return 0;
    }
	if(dp[i][j] != -1){
		return dp[i][j];
	}
	long long ans = 0;
	ans = (ans + func(i - 1, j, dp, mat)) % mod;
	ans = (ans + func(i, j - 1, dp, mat)) % mod;
	return dp[i][j] = ans;
}

int mazeObstacles(int n, int m, vector< vector< int> > &mat) {
    vector<vector<int>> dp(n, vector<int> (m, -1));
	return func(n - 1, m - 1, dp, mat);
}
