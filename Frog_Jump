#include <bits/stdc++.h> 
#define ll long long

int func(int i, vector<int> &h, vector<int> &dp){
    if(i == 0){
        return 0;
    }
    if(dp[i] != -1){
        return dp[i];
    }
    int ans = func(i - 1, h, dp) + abs(h[i] - h[i - 1]);
    if((i - 2) >= 0){
        ans = min(ans , func(i - 2, h, dp) + abs(h[i] - h[i - 2]));
    }
    return dp[i] = ans;
}

int frogJump(int n, vector<int> &h)
{
    vector<int> dp(n, -1);
    return func(n - 1, h, dp);
}




#include <bits/stdc++.h> 
#define ll long long

int frogJump(int n, vector<int> &h)
{
    vector<int> dp(n);
    dp[0] = 0;
    for(int i = 1; i < n; i++){
        dp[i] = dp[i - 1] + abs(h[i] - h[i - 1]);
        if(i > 1){
            dp[i] = min(dp[i], dp[i - 2] + abs(h[i] - h[i - 2]));
        }
    }
    return dp[n - 1];
}
