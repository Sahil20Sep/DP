
int func(int i, int have, vector<int> &price, vector<vector<int>> &dp){
	if(have == 0){
		return 0;
	}
	if(dp[i][have] != -1){
		return dp[i][have];
	}
	int ans = INT_MIN;
	if(i - 1 >= 0)
		ans = max(ans, func(i - 1, have, price, dp));
	if(have - i - 1 >= 0 && i >= 0){
		ans = max(ans, func(i, have - i - 1, price, dp) + price[i]);
	}
	return dp[i][have] = ans;
}

int cutRod(vector<int> &price, int n)
{
	vector<vector<int>> dp(n, vector<int> (n + 1, -1));
	return func(n - 1, n, price, dp);
}
