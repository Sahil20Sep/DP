#include <bits/stdc++.h>

int func(int i, int j, string &s, string &t, vector<vector<int>> &dp) {
    if(i < 0 || j < 0){
      return 0;
    }
    if(dp[i][j] != -1){
      return dp[i][j];
    }
    int ans = 0;
    if(s[i] == t[j]){
      ans = max(ans, 1 + func(i - 1, j - 1, s, t, dp));
    }else{
      ans = max(ans, max(func(i - 1, j, s, t, dp), func(i, j - 1, s, t, dp)));
    }
    return dp[i][j] = ans;
}

int longestPalindromeSubsequence(string s)
{
    int n = s.size();
    vector<vector<int>> dp(n, vector<int> (n, -1));
    string t = s;
    reverse(t.begin(), t.end());
    return func(n - 1, n - 1, s, t, dp);
}
