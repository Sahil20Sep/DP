#include <bits/stdc++.h> 

int func(int i, int target, vector<int> &num, vector<vector<int>> &dp){
    if(target == 0){
        return 1;
    }
    if(i < 0){
        return 0;
    }
    if(dp[i][target] != -1){
        return dp[i][target];
    }
    int ans = 0;
    ans += func(i - 1, target, num, dp);
    if(target - num[i] >= 0 && num[i] != 0){
        ans += func(i - 1, target - num[i], num, dp);
    }
    return dp[i][target] = ans;
}

int findWays(vector<int> &num, int tar)
{
    vector<vector<int>> dp(num.size(), vector<int> (tar + 1, -1));
    int ans = func(num.size() - 1, tar, num, dp);
    return ans * pow(2, count(num.begin(), num.end(), 0));
}
