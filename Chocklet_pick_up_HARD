#include <bits/stdc++.h> 

int func(int row, int left, int right, vector<vector<int>> &grid, vector<vector<vector<int>>> &dp){
    if(row == grid.size() - 1){
        if(left == right){
            return grid[row][left];
        }else{
            return (grid[row][left] + grid[row][right]);
        }
    }
    if(dp[row][left][right] != -1){
        return dp[row][left][right];
    }
    int ans = 0;
    for(int i = -1; i <= 1; i++){
        for(int j = -1; j <= 1; j++){
            if((left + i) >= 0 && (left + i) < grid[0].size() && (right + j) >= 0 && (right + j) < grid[0].size()){
                if(left == right){
                    ans = max(ans, func(row + 1, left + i, right + j, grid, dp) + grid[row][right]);
                }else{
                    ans = max(ans, func(row + 1, left + i, right + j, grid, dp) + grid[row][left] + grid[row][right]);
                }
            }
        }
    }
    return dp[row][left][right] = ans;
}

int maximumChocolates(int r, int c, vector<vector<int>> &grid) {
    vector<vector<vector<int>>> dp(r, vector<vector<int>> (c, vector<int> (c, -1)));
    return func(0, 0, grid[0].size() - 1, grid, dp);
}
